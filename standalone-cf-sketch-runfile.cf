            body common control
{
    bundlesequence => { "cfsketch_run" };
    inputs => { @(cfsketch_g.inputs) };
}


        bundle common cfsketch_g
{
  classes:
    # contexts
           # contexts for activation 011
      "_011_VCS__vcs_mirror_activated" expression => "any";
      "_011_VCS__vcs_mirror_nowipe" expression => "any";
       # contexts for activation 002
      "_002_System__etc_hosts_activated" expression => "any";
      "_002_System__etc_hosts_defined_only" expression => "any";
       # contexts for activation 016
      "_016_VCS__vcs_mirror_activated" expression => "any";
      "_016_VCS__vcs_mirror_nowipe" expression => "any";
       # contexts for activation 010
      "_010_System__tzconfig_activated" expression => "any";
       # contexts for activation 004
      "_004_System__openrc_activated" expression => "any";
       # contexts for activation 013
      "_013_VCS__vcs_mirror_activated" expression => "any";
      "_013_VCS__vcs_mirror_nowipe" expression => "any";
       # contexts for activation 005
      "_005_System__openrc_activated" expression => "any";
       # contexts for activation 008
      "_008_System__openrc_activated" expression => "any";
       # contexts for activation 009
      "_009_System__set_hostname_activated" expression => "any";
       # contexts for activation 003
      "_003_System__openrc_activated" expression => "any";
       # contexts for activation 006
      "_006_System__openrc_activated" expression => "any";
       # contexts for activation 007
      "_007_System__openrc_activated" expression => "any";
       # contexts for activation 014
      "_014_VCS__vcs_mirror_activated" expression => "any";
      "_014_VCS__vcs_mirror_nowipe" expression => "any";
       # contexts for activation 015
      "_015_VCS__vcs_mirror_activated" expression => "any";
      "_015_VCS__vcs_mirror_nowipe" expression => "any";
       # contexts for activation 001
      "_001_Packages__Generic__add_activated" expression => "any";
       # contexts for activation 012
      "_012_VCS__vcs_mirror_activated" expression => "any";
      "_012_VCS__vcs_mirror_nowipe" expression => "any";

      vars:
        # Files that need to be loaded for this to work.
        "inputs" slist => { "sketches/CFEngine/stdlib/cfengine_stdlib.cf", "sketches/Packages/Generic/add/main.cf", "sketches/System/etc_hosts/main.cf", "sketches/System/openrc/main.cf", "sketches/System/set_hostname/main.cf", "sketches/System/tzconfig/main.cf", "sketches/VCS/vcs_mirror/main.cf" };

           # string and slist variables for activation 011
     any::
       "_011_VCS__vcs_mirror_prefix" string => "cfsketch_g._011_VCS__vcs_mirror_";
       "_011_VCS__vcs_mirror_class_prefix" string => "default:_011_VCS__vcs_mirror_";
       "_011_VCS__vcs_mirror_vcs" string => "/usr/bin/git";
       "_011_VCS__vcs_mirror_path" string => "/usr/src/linux";
       "_011_VCS__vcs_mirror_origin" string => "https://github.com/ahdinosaur/blue-dream-linux.git";
       "_011_VCS__vcs_mirror_branch" string => "master";
       "_011_VCS__vcs_mirror_runas" string => "root";
       "_011_VCS__vcs_mirror_umask" string => "022";
       "_011_VCS__vcs_mirror_contexts[activated]" string => "any"; # text representation of the context "activated"
       "_011_VCS__vcs_mirror_contexts[nowipe]" string => "any"; # text representation of the context "nowipe"
       "_011_VCS__vcs_mirror_sketch_depends" slist => { "CFEngine::stdlib" };
       "_011_VCS__vcs_mirror_sketch_authors" slist => { "Nick Anderson <nick@cmdln.org>", "Ted Zlatanov <tzz@lifelogs.com>" };
       "_011_VCS__vcs_mirror_sketch_tags" slist => { "cfdc" };
       "_011_VCS__vcs_mirror_sketch_manifest" slist => { "README.md", "main.cf", "params/cfengine-copbl.json", "params/cfengine-core-runas-tzz.json", "params/cfengine-core.json", "params/thrift-lib-perl.json" };
       "_011_VCS__vcs_mirror_sketch_manifest_cf" slist => { "main.cf" };
       "_011_VCS__vcs_mirror_sketch_manifest_docs" slist => { "README.md" };
       "_011_VCS__vcs_mirror_sketch_manifest_extra" slist => { "params/cfengine-copbl.json", "params/cfengine-core-runas-tzz.json", "params/cfengine-core.json", "params/thrift-lib-perl.json" };
       "_011_VCS__vcs_mirror_sketch_version" string => "1.11";
       "_011_VCS__vcs_mirror_sketch_name" string => "VCS::vcs_mirror";
       "_011_VCS__vcs_mirror_sketch_license" string => "MIT";
       # string and slist variables for activation 002
     any::
       "_002_System__etc_hosts_class_prefix" string => "default:_002_System__etc_hosts_";
       "_002_System__etc_hosts_hostfile" string => "/etc/hosts";
       "_002_System__etc_hosts_hosts[192.168.42.1]" string => "banana-kush banana-kush.emerald-triangle";
       "_002_System__etc_hosts_hosts[192.168.42.150]" string => "beagle beagle.emerald-triangle";
       "_002_System__etc_hosts_hosts[192.168.42.2]" string => "pineapple-express pineapple-express.emerald-triangle";
       "_002_System__etc_hosts_hosts[192.168.42.3]" string => "blue-dream blue-dream.emerald-triangle";
       "_002_System__etc_hosts_contexts[activated]" string => "any"; # text representation of the context "activated"
       "_002_System__etc_hosts_contexts[defined_only]" string => "any"; # text representation of the context "defined_only"
       "_002_System__etc_hosts_sketch_depends" slist => { "CFEngine::stdlib" };
       "_002_System__etc_hosts_sketch_authors" slist => { "Nick Anderson <nick@cmdln.org>", "Ted Zlatanov <tzz@lifelogs.com>" };
       "_002_System__etc_hosts_sketch_tags" slist => { "cfdc" };
       "_002_System__etc_hosts_sketch_manifest" slist => { "README.md", "main.cf", "params/example.json" };
       "_002_System__etc_hosts_sketch_manifest_cf" slist => { "main.cf" };
       "_002_System__etc_hosts_sketch_manifest_docs" slist => { "README.md" };
       "_002_System__etc_hosts_sketch_manifest_extra" slist => { "params/example.json" };
       "_002_System__etc_hosts_sketch_version" string => "2.1";
       "_002_System__etc_hosts_sketch_name" string => "System::etc_hosts";
       "_002_System__etc_hosts_sketch_license" string => "MIT";
       # string and slist variables for activation 016
     any::
       "_016_VCS__vcs_mirror_prefix" string => "cfsketch_g._016_VCS__vcs_mirror_";
       "_016_VCS__vcs_mirror_class_prefix" string => "default:_016_VCS__vcs_mirror_";
       "_016_VCS__vcs_mirror_vcs" string => "/usr/bin/git";
       "_016_VCS__vcs_mirror_path" string => "/var/cfengine/masterfiles";
       "_016_VCS__vcs_mirror_origin" string => "https://github.com/ahdinosaur/blue-dream-masterfiles.git";
       "_016_VCS__vcs_mirror_branch" string => "master";
       "_016_VCS__vcs_mirror_runas" string => "root";
       "_016_VCS__vcs_mirror_umask" string => "022";
       "_016_VCS__vcs_mirror_contexts[activated]" string => "any"; # text representation of the context "activated"
       "_016_VCS__vcs_mirror_contexts[nowipe]" string => "any"; # text representation of the context "nowipe"
       "_016_VCS__vcs_mirror_sketch_depends" slist => { "CFEngine::stdlib" };
       "_016_VCS__vcs_mirror_sketch_authors" slist => { "Nick Anderson <nick@cmdln.org>", "Ted Zlatanov <tzz@lifelogs.com>" };
       "_016_VCS__vcs_mirror_sketch_tags" slist => { "cfdc" };
       "_016_VCS__vcs_mirror_sketch_manifest" slist => { "README.md", "main.cf", "params/cfengine-copbl.json", "params/cfengine-core-runas-tzz.json", "params/cfengine-core.json", "params/thrift-lib-perl.json" };
       "_016_VCS__vcs_mirror_sketch_manifest_cf" slist => { "main.cf" };
       "_016_VCS__vcs_mirror_sketch_manifest_docs" slist => { "README.md" };
       "_016_VCS__vcs_mirror_sketch_manifest_extra" slist => { "params/cfengine-copbl.json", "params/cfengine-core-runas-tzz.json", "params/cfengine-core.json", "params/thrift-lib-perl.json" };
       "_016_VCS__vcs_mirror_sketch_version" string => "1.11";
       "_016_VCS__vcs_mirror_sketch_name" string => "VCS::vcs_mirror";
       "_016_VCS__vcs_mirror_sketch_license" string => "MIT";
       # string and slist variables for activation 010
     any::
       "_010_System__tzconfig_canon_prefix" string => "_010_System__tzconfig_";
       "_010_System__tzconfig_timezone" string => "America/Los_Angeles";
       "_010_System__tzconfig_zoneinfo" string => "/usr/share/zoneinfo";
       "_010_System__tzconfig_relocate" string => "/";
       "_010_System__tzconfig_contexts[activated]" string => "any"; # text representation of the context "activated"
       "_010_System__tzconfig_sketch_depends" slist => { "CFEngine::stdlib" };
       "_010_System__tzconfig_sketch_authors" slist => { "Nick Anderson <nick@cmdln.org>", "Ted Zlatanov <tzz@lifelogs.com>" };
       "_010_System__tzconfig_sketch_tags" slist => { "cfdc" };
       "_010_System__tzconfig_sketch_manifest" slist => { "README.md", "main.cf", "params/US_Central.json" };
       "_010_System__tzconfig_sketch_manifest_cf" slist => { "main.cf" };
       "_010_System__tzconfig_sketch_manifest_docs" slist => { "README.md" };
       "_010_System__tzconfig_sketch_manifest_extra" slist => { "params/US_Central.json" };
       "_010_System__tzconfig_sketch_version" string => "1.2";
       "_010_System__tzconfig_sketch_name" string => "System::tzconfig";
       "_010_System__tzconfig_sketch_license" string => "MIT";
       # string and slist variables for activation 004
     any::
       "_004_System__openrc_prefix" string => "cfsketch_g._004_System__openrc_";
       "_004_System__openrc_class_prefix" string => "default:_004_System__openrc_";
       "_004_System__openrc_service" string => "xdm";
       "_004_System__openrc_runlevel" string => "default";
       "_004_System__openrc_contexts[activated]" string => "any"; # text representation of the context "activated"
       "_004_System__openrc_sketch_depends" slist => { "CFEngine::stdlib" };
       "_004_System__openrc_sketch_authors" slist => { "Michael Williams <dinosaur@riseup.net>" };
       "_004_System__openrc_sketch_tags" slist => { "cfdc" };
       "_004_System__openrc_sketch_manifest" slist => { "README.md", "main.cf", "params/demo.json" };
       "_004_System__openrc_sketch_manifest_cf" slist => { "main.cf" };
       "_004_System__openrc_sketch_manifest_docs" slist => { "README.md" };
       "_004_System__openrc_sketch_manifest_extra" slist => { "params/demo.json" };
       "_004_System__openrc_sketch_version" string => "0.01";
       "_004_System__openrc_sketch_name" string => "System::openrc";
       "_004_System__openrc_sketch_license" string => "MIT";
       # string and slist variables for activation 013
     any::
       "_013_VCS__vcs_mirror_prefix" string => "cfsketch_g._013_VCS__vcs_mirror_";
       "_013_VCS__vcs_mirror_class_prefix" string => "default:_013_VCS__vcs_mirror_";
       "_013_VCS__vcs_mirror_vcs" string => "/usr/bin/git";
       "_013_VCS__vcs_mirror_path" string => "/etc/X11";
       "_013_VCS__vcs_mirror_origin" string => "https://github.com/ahdinosaur/blue-dream-X11.git";
       "_013_VCS__vcs_mirror_branch" string => "master";
       "_013_VCS__vcs_mirror_runas" string => "root";
       "_013_VCS__vcs_mirror_umask" string => "022";
       "_013_VCS__vcs_mirror_contexts[activated]" string => "any"; # text representation of the context "activated"
       "_013_VCS__vcs_mirror_contexts[nowipe]" string => "any"; # text representation of the context "nowipe"
       "_013_VCS__vcs_mirror_sketch_depends" slist => { "CFEngine::stdlib" };
       "_013_VCS__vcs_mirror_sketch_authors" slist => { "Nick Anderson <nick@cmdln.org>", "Ted Zlatanov <tzz@lifelogs.com>" };
       "_013_VCS__vcs_mirror_sketch_tags" slist => { "cfdc" };
       "_013_VCS__vcs_mirror_sketch_manifest" slist => { "README.md", "main.cf", "params/cfengine-copbl.json", "params/cfengine-core-runas-tzz.json", "params/cfengine-core.json", "params/thrift-lib-perl.json" };
       "_013_VCS__vcs_mirror_sketch_manifest_cf" slist => { "main.cf" };
       "_013_VCS__vcs_mirror_sketch_manifest_docs" slist => { "README.md" };
       "_013_VCS__vcs_mirror_sketch_manifest_extra" slist => { "params/cfengine-copbl.json", "params/cfengine-core-runas-tzz.json", "params/cfengine-core.json", "params/thrift-lib-perl.json" };
       "_013_VCS__vcs_mirror_sketch_version" string => "1.11";
       "_013_VCS__vcs_mirror_sketch_name" string => "VCS::vcs_mirror";
       "_013_VCS__vcs_mirror_sketch_license" string => "MIT";
       # string and slist variables for activation 005
     any::
       "_005_System__openrc_prefix" string => "cfsketch_g._005_System__openrc_";
       "_005_System__openrc_class_prefix" string => "default:_005_System__openrc_";
       "_005_System__openrc_service" string => "vixie-cron";
       "_005_System__openrc_runlevel" string => "default";
       "_005_System__openrc_contexts[activated]" string => "any"; # text representation of the context "activated"
       "_005_System__openrc_sketch_depends" slist => { "CFEngine::stdlib" };
       "_005_System__openrc_sketch_authors" slist => { "Michael Williams <dinosaur@riseup.net>" };
       "_005_System__openrc_sketch_tags" slist => { "cfdc" };
       "_005_System__openrc_sketch_manifest" slist => { "README.md", "main.cf", "params/demo.json" };
       "_005_System__openrc_sketch_manifest_cf" slist => { "main.cf" };
       "_005_System__openrc_sketch_manifest_docs" slist => { "README.md" };
       "_005_System__openrc_sketch_manifest_extra" slist => { "params/demo.json" };
       "_005_System__openrc_sketch_version" string => "0.01";
       "_005_System__openrc_sketch_name" string => "System::openrc";
       "_005_System__openrc_sketch_license" string => "MIT";
       # string and slist variables for activation 008
     any::
       "_008_System__openrc_prefix" string => "cfsketch_g._008_System__openrc_";
       "_008_System__openrc_class_prefix" string => "default:_008_System__openrc_";
       "_008_System__openrc_service" string => "syslog-ng";
       "_008_System__openrc_runlevel" string => "default";
       "_008_System__openrc_contexts[activated]" string => "any"; # text representation of the context "activated"
       "_008_System__openrc_sketch_depends" slist => { "CFEngine::stdlib" };
       "_008_System__openrc_sketch_authors" slist => { "Michael Williams <dinosaur@riseup.net>" };
       "_008_System__openrc_sketch_tags" slist => { "cfdc" };
       "_008_System__openrc_sketch_manifest" slist => { "README.md", "main.cf", "params/demo.json" };
       "_008_System__openrc_sketch_manifest_cf" slist => { "main.cf" };
       "_008_System__openrc_sketch_manifest_docs" slist => { "README.md" };
       "_008_System__openrc_sketch_manifest_extra" slist => { "params/demo.json" };
       "_008_System__openrc_sketch_version" string => "0.01";
       "_008_System__openrc_sketch_name" string => "System::openrc";
       "_008_System__openrc_sketch_license" string => "MIT";
       # string and slist variables for activation 009
     any::
       "_009_System__set_hostname_canon_prefix" string => "_009_System__set_hostname_";
       "_009_System__set_hostname_hostname" string => "blue-dream";
       "_009_System__set_hostname_domainname" string => "emerald-triangle";
       "_009_System__set_hostname_contexts[activated]" string => "any"; # text representation of the context "activated"
       "_009_System__set_hostname_sketch_depends" slist => { "CFEngine::stdlib" };
       "_009_System__set_hostname_sketch_authors" slist => { "Nick Anderson <nick@cmdln.org>", "Ted Zlatanov <tzz@lifelogs.com>" };
       "_009_System__set_hostname_sketch_tags" slist => { "cfdc" };
       "_009_System__set_hostname_sketch_manifest" slist => { "README.md", "changelog", "main.cf", "params/example.json", "test.cf" };
       "_009_System__set_hostname_sketch_manifest_cf" slist => { "main.cf", "test.cf" };
       "_009_System__set_hostname_sketch_manifest_docs" slist => { "README.md" };
       "_009_System__set_hostname_sketch_manifest_extra" slist => { "changelog", "params/example.json" };
       "_009_System__set_hostname_sketch_version" string => "1.05";
       "_009_System__set_hostname_sketch_name" string => "System::set_hostname";
       "_009_System__set_hostname_sketch_license" string => "MIT";
       # string and slist variables for activation 003
     any::
       "_003_System__openrc_prefix" string => "cfsketch_g._003_System__openrc_";
       "_003_System__openrc_class_prefix" string => "default:_003_System__openrc_";
       "_003_System__openrc_service" string => "cf-execd";
       "_003_System__openrc_runlevel" string => "default";
       "_003_System__openrc_contexts[activated]" string => "any"; # text representation of the context "activated"
       "_003_System__openrc_sketch_depends" slist => { "CFEngine::stdlib" };
       "_003_System__openrc_sketch_authors" slist => { "Michael Williams <dinosaur@riseup.net>" };
       "_003_System__openrc_sketch_tags" slist => { "cfdc" };
       "_003_System__openrc_sketch_manifest" slist => { "README.md", "main.cf", "params/demo.json" };
       "_003_System__openrc_sketch_manifest_cf" slist => { "main.cf" };
       "_003_System__openrc_sketch_manifest_docs" slist => { "README.md" };
       "_003_System__openrc_sketch_manifest_extra" slist => { "params/demo.json" };
       "_003_System__openrc_sketch_version" string => "0.01";
       "_003_System__openrc_sketch_name" string => "System::openrc";
       "_003_System__openrc_sketch_license" string => "MIT";
       # string and slist variables for activation 006
     any::
       "_006_System__openrc_prefix" string => "cfsketch_g._006_System__openrc_";
       "_006_System__openrc_class_prefix" string => "default:_006_System__openrc_";
       "_006_System__openrc_service" string => "dhcpcd";
       "_006_System__openrc_runlevel" string => "default";
       "_006_System__openrc_contexts[activated]" string => "any"; # text representation of the context "activated"
       "_006_System__openrc_sketch_depends" slist => { "CFEngine::stdlib" };
       "_006_System__openrc_sketch_authors" slist => { "Michael Williams <dinosaur@riseup.net>" };
       "_006_System__openrc_sketch_tags" slist => { "cfdc" };
       "_006_System__openrc_sketch_manifest" slist => { "README.md", "main.cf", "params/demo.json" };
       "_006_System__openrc_sketch_manifest_cf" slist => { "main.cf" };
       "_006_System__openrc_sketch_manifest_docs" slist => { "README.md" };
       "_006_System__openrc_sketch_manifest_extra" slist => { "params/demo.json" };
       "_006_System__openrc_sketch_version" string => "0.01";
       "_006_System__openrc_sketch_name" string => "System::openrc";
       "_006_System__openrc_sketch_license" string => "MIT";
       # string and slist variables for activation 007
     any::
       "_007_System__openrc_prefix" string => "cfsketch_g._007_System__openrc_";
       "_007_System__openrc_class_prefix" string => "default:_007_System__openrc_";
       "_007_System__openrc_service" string => "sshd";
       "_007_System__openrc_runlevel" string => "default";
       "_007_System__openrc_contexts[activated]" string => "any"; # text representation of the context "activated"
       "_007_System__openrc_sketch_depends" slist => { "CFEngine::stdlib" };
       "_007_System__openrc_sketch_authors" slist => { "Michael Williams <dinosaur@riseup.net>" };
       "_007_System__openrc_sketch_tags" slist => { "cfdc" };
       "_007_System__openrc_sketch_manifest" slist => { "README.md", "main.cf", "params/demo.json" };
       "_007_System__openrc_sketch_manifest_cf" slist => { "main.cf" };
       "_007_System__openrc_sketch_manifest_docs" slist => { "README.md" };
       "_007_System__openrc_sketch_manifest_extra" slist => { "params/demo.json" };
       "_007_System__openrc_sketch_version" string => "0.01";
       "_007_System__openrc_sketch_name" string => "System::openrc";
       "_007_System__openrc_sketch_license" string => "MIT";
       # string and slist variables for activation 014
     any::
       "_014_VCS__vcs_mirror_prefix" string => "cfsketch_g._014_VCS__vcs_mirror_";
       "_014_VCS__vcs_mirror_class_prefix" string => "default:_014_VCS__vcs_mirror_";
       "_014_VCS__vcs_mirror_vcs" string => "/usr/bin/git";
       "_014_VCS__vcs_mirror_path" string => "/etc/portage";
       "_014_VCS__vcs_mirror_origin" string => "https://github.com/ahdinosaur/blue-dream-portage.git";
       "_014_VCS__vcs_mirror_branch" string => "master";
       "_014_VCS__vcs_mirror_runas" string => "root";
       "_014_VCS__vcs_mirror_umask" string => "022";
       "_014_VCS__vcs_mirror_contexts[activated]" string => "any"; # text representation of the context "activated"
       "_014_VCS__vcs_mirror_contexts[nowipe]" string => "any"; # text representation of the context "nowipe"
       "_014_VCS__vcs_mirror_sketch_depends" slist => { "CFEngine::stdlib" };
       "_014_VCS__vcs_mirror_sketch_authors" slist => { "Nick Anderson <nick@cmdln.org>", "Ted Zlatanov <tzz@lifelogs.com>" };
       "_014_VCS__vcs_mirror_sketch_tags" slist => { "cfdc" };
       "_014_VCS__vcs_mirror_sketch_manifest" slist => { "README.md", "main.cf", "params/cfengine-copbl.json", "params/cfengine-core-runas-tzz.json", "params/cfengine-core.json", "params/thrift-lib-perl.json" };
       "_014_VCS__vcs_mirror_sketch_manifest_cf" slist => { "main.cf" };
       "_014_VCS__vcs_mirror_sketch_manifest_docs" slist => { "README.md" };
       "_014_VCS__vcs_mirror_sketch_manifest_extra" slist => { "params/cfengine-copbl.json", "params/cfengine-core-runas-tzz.json", "params/cfengine-core.json", "params/thrift-lib-perl.json" };
       "_014_VCS__vcs_mirror_sketch_version" string => "1.11";
       "_014_VCS__vcs_mirror_sketch_name" string => "VCS::vcs_mirror";
       "_014_VCS__vcs_mirror_sketch_license" string => "MIT";
       # string and slist variables for activation 015
     any::
       "_015_VCS__vcs_mirror_prefix" string => "cfsketch_g._015_VCS__vcs_mirror_";
       "_015_VCS__vcs_mirror_class_prefix" string => "default:_015_VCS__vcs_mirror_";
       "_015_VCS__vcs_mirror_vcs" string => "/usr/bin/git";
       "_015_VCS__vcs_mirror_path" string => "/usr/local/portage";
       "_015_VCS__vcs_mirror_origin" string => "https://github.com/ahdinosaur/blue-dream-portdir.git";
       "_015_VCS__vcs_mirror_branch" string => "master";
       "_015_VCS__vcs_mirror_runas" string => "root";
       "_015_VCS__vcs_mirror_umask" string => "022";
       "_015_VCS__vcs_mirror_contexts[activated]" string => "any"; # text representation of the context "activated"
       "_015_VCS__vcs_mirror_contexts[nowipe]" string => "any"; # text representation of the context "nowipe"
       "_015_VCS__vcs_mirror_sketch_depends" slist => { "CFEngine::stdlib" };
       "_015_VCS__vcs_mirror_sketch_authors" slist => { "Nick Anderson <nick@cmdln.org>", "Ted Zlatanov <tzz@lifelogs.com>" };
       "_015_VCS__vcs_mirror_sketch_tags" slist => { "cfdc" };
       "_015_VCS__vcs_mirror_sketch_manifest" slist => { "README.md", "main.cf", "params/cfengine-copbl.json", "params/cfengine-core-runas-tzz.json", "params/cfengine-core.json", "params/thrift-lib-perl.json" };
       "_015_VCS__vcs_mirror_sketch_manifest_cf" slist => { "main.cf" };
       "_015_VCS__vcs_mirror_sketch_manifest_docs" slist => { "README.md" };
       "_015_VCS__vcs_mirror_sketch_manifest_extra" slist => { "params/cfengine-copbl.json", "params/cfengine-core-runas-tzz.json", "params/cfengine-core.json", "params/thrift-lib-perl.json" };
       "_015_VCS__vcs_mirror_sketch_version" string => "1.11";
       "_015_VCS__vcs_mirror_sketch_name" string => "VCS::vcs_mirror";
       "_015_VCS__vcs_mirror_sketch_license" string => "MIT";
       # string and slist variables for activation 001
     any::
       "_001_Packages__Generic__add_prefix" string => "cfsketch_g._001_Packages__Generic__add_";
       "_001_Packages__Generic__add_class_prefix" string => "default:_001_Packages__Generic__add_";
       "_001_Packages__Generic__add_packages" slist => { "app-misc/mc" };
       "_001_Packages__Generic__add_contexts[activated]" string => "any"; # text representation of the context "activated"
       "_001_Packages__Generic__add_sketch_depends" slist => { "CFEngine::stdlib" };
       "_001_Packages__Generic__add_sketch_authors" slist => { "Michael Williams <dinosaur@riseup.net>" };
       "_001_Packages__Generic__add_sketch_tags" slist => { "cfdc" };
       "_001_Packages__Generic__add_sketch_manifest" slist => { "README.md", "main.cf", "params/demo.json" };
       "_001_Packages__Generic__add_sketch_manifest_cf" slist => { "main.cf" };
       "_001_Packages__Generic__add_sketch_manifest_docs" slist => { "README.md" };
       "_001_Packages__Generic__add_sketch_manifest_extra" slist => { "params/demo.json" };
       "_001_Packages__Generic__add_sketch_version" string => "0.01";
       "_001_Packages__Generic__add_sketch_name" string => "Packages::Generic::add";
       "_001_Packages__Generic__add_sketch_license" string => "MIT";
       # string and slist variables for activation 012
     any::
       "_012_VCS__vcs_mirror_prefix" string => "cfsketch_g._012_VCS__vcs_mirror_";
       "_012_VCS__vcs_mirror_class_prefix" string => "default:_012_VCS__vcs_mirror_";
       "_012_VCS__vcs_mirror_vcs" string => "/usr/bin/git";
       "_012_VCS__vcs_mirror_path" string => "/etc/conf.d";
       "_012_VCS__vcs_mirror_origin" string => "https://github.com/ahdinosaur/blue-dream-conf.d.git";
       "_012_VCS__vcs_mirror_branch" string => "master";
       "_012_VCS__vcs_mirror_runas" string => "root";
       "_012_VCS__vcs_mirror_umask" string => "022";
       "_012_VCS__vcs_mirror_contexts[activated]" string => "any"; # text representation of the context "activated"
       "_012_VCS__vcs_mirror_contexts[nowipe]" string => "any"; # text representation of the context "nowipe"
       "_012_VCS__vcs_mirror_sketch_depends" slist => { "CFEngine::stdlib" };
       "_012_VCS__vcs_mirror_sketch_authors" slist => { "Nick Anderson <nick@cmdln.org>", "Ted Zlatanov <tzz@lifelogs.com>" };
       "_012_VCS__vcs_mirror_sketch_tags" slist => { "cfdc" };
       "_012_VCS__vcs_mirror_sketch_manifest" slist => { "README.md", "main.cf", "params/cfengine-copbl.json", "params/cfengine-core-runas-tzz.json", "params/cfengine-core.json", "params/thrift-lib-perl.json" };
       "_012_VCS__vcs_mirror_sketch_manifest_cf" slist => { "main.cf" };
       "_012_VCS__vcs_mirror_sketch_manifest_docs" slist => { "README.md" };
       "_012_VCS__vcs_mirror_sketch_manifest_extra" slist => { "params/cfengine-copbl.json", "params/cfengine-core-runas-tzz.json", "params/cfengine-core.json", "params/thrift-lib-perl.json" };
       "_012_VCS__vcs_mirror_sketch_version" string => "1.11";
       "_012_VCS__vcs_mirror_sketch_name" string => "VCS::vcs_mirror";
       "_012_VCS__vcs_mirror_sketch_license" string => "MIT";

}

bundle agent cfsketch_run
{
  methods:
    "cfsketch_g" usebundle => "cfsketch_g";
        _011_VCS__vcs_mirror_activated::
      "011 VCS::vcs_mirror 1" usebundle => cfdc_vcs:mirror($(cfsketch_g._011_VCS__vcs_mirror_prefix), $(cfsketch_g._011_VCS__vcs_mirror_class_prefix), $(cfsketch_g._011_VCS__vcs_mirror_vcs), $(cfsketch_g._011_VCS__vcs_mirror_path), $(cfsketch_g._011_VCS__vcs_mirror_origin), $(cfsketch_g._011_VCS__vcs_mirror_branch), $(cfsketch_g._011_VCS__vcs_mirror_runas), $(cfsketch_g._011_VCS__vcs_mirror_umask));
    _002_System__etc_hosts_activated::
      "002 System::etc_hosts 1" usebundle => cfdc_etc_hosts:configure($(cfsketch_g._002_System__etc_hosts_class_prefix), $(cfsketch_g._002_System__etc_hosts_hostfile), "default:cfsketch_g._002_System__etc_hosts_hosts");
    _016_VCS__vcs_mirror_activated::
      "016 VCS::vcs_mirror 6" usebundle => cfdc_vcs:mirror($(cfsketch_g._016_VCS__vcs_mirror_prefix), $(cfsketch_g._016_VCS__vcs_mirror_class_prefix), $(cfsketch_g._016_VCS__vcs_mirror_vcs), $(cfsketch_g._016_VCS__vcs_mirror_path), $(cfsketch_g._016_VCS__vcs_mirror_origin), $(cfsketch_g._016_VCS__vcs_mirror_branch), $(cfsketch_g._016_VCS__vcs_mirror_runas), $(cfsketch_g._016_VCS__vcs_mirror_umask));
    _010_System__tzconfig_activated::
      "010 System::tzconfig 1" usebundle => cfdc_tzconfig:set($(cfsketch_g._010_System__tzconfig_canon_prefix), $(cfsketch_g._010_System__tzconfig_timezone), $(cfsketch_g._010_System__tzconfig_zoneinfo), $(cfsketch_g._010_System__tzconfig_relocate));
    _004_System__openrc_activated::
      "004 System::openrc 2" usebundle => cfdc_openrc:entry($(cfsketch_g._004_System__openrc_prefix), $(cfsketch_g._004_System__openrc_class_prefix), $(cfsketch_g._004_System__openrc_service), $(cfsketch_g._004_System__openrc_runlevel));
    _013_VCS__vcs_mirror_activated::
      "013 VCS::vcs_mirror 3" usebundle => cfdc_vcs:mirror($(cfsketch_g._013_VCS__vcs_mirror_prefix), $(cfsketch_g._013_VCS__vcs_mirror_class_prefix), $(cfsketch_g._013_VCS__vcs_mirror_vcs), $(cfsketch_g._013_VCS__vcs_mirror_path), $(cfsketch_g._013_VCS__vcs_mirror_origin), $(cfsketch_g._013_VCS__vcs_mirror_branch), $(cfsketch_g._013_VCS__vcs_mirror_runas), $(cfsketch_g._013_VCS__vcs_mirror_umask));
    _005_System__openrc_activated::
      "005 System::openrc 3" usebundle => cfdc_openrc:entry($(cfsketch_g._005_System__openrc_prefix), $(cfsketch_g._005_System__openrc_class_prefix), $(cfsketch_g._005_System__openrc_service), $(cfsketch_g._005_System__openrc_runlevel));
    _008_System__openrc_activated::
      "008 System::openrc 6" usebundle => cfdc_openrc:entry($(cfsketch_g._008_System__openrc_prefix), $(cfsketch_g._008_System__openrc_class_prefix), $(cfsketch_g._008_System__openrc_service), $(cfsketch_g._008_System__openrc_runlevel));
    _009_System__set_hostname_activated::
      "009 System::set_hostname 1" usebundle => cfdc_hostname:set($(cfsketch_g._009_System__set_hostname_canon_prefix), $(cfsketch_g._009_System__set_hostname_hostname), $(cfsketch_g._009_System__set_hostname_domainname));
    _003_System__openrc_activated::
      "003 System::openrc 1" usebundle => cfdc_openrc:entry($(cfsketch_g._003_System__openrc_prefix), $(cfsketch_g._003_System__openrc_class_prefix), $(cfsketch_g._003_System__openrc_service), $(cfsketch_g._003_System__openrc_runlevel));
    _006_System__openrc_activated::
      "006 System::openrc 4" usebundle => cfdc_openrc:entry($(cfsketch_g._006_System__openrc_prefix), $(cfsketch_g._006_System__openrc_class_prefix), $(cfsketch_g._006_System__openrc_service), $(cfsketch_g._006_System__openrc_runlevel));
    _007_System__openrc_activated::
      "007 System::openrc 5" usebundle => cfdc_openrc:entry($(cfsketch_g._007_System__openrc_prefix), $(cfsketch_g._007_System__openrc_class_prefix), $(cfsketch_g._007_System__openrc_service), $(cfsketch_g._007_System__openrc_runlevel));
    _014_VCS__vcs_mirror_activated::
      "014 VCS::vcs_mirror 4" usebundle => cfdc_vcs:mirror($(cfsketch_g._014_VCS__vcs_mirror_prefix), $(cfsketch_g._014_VCS__vcs_mirror_class_prefix), $(cfsketch_g._014_VCS__vcs_mirror_vcs), $(cfsketch_g._014_VCS__vcs_mirror_path), $(cfsketch_g._014_VCS__vcs_mirror_origin), $(cfsketch_g._014_VCS__vcs_mirror_branch), $(cfsketch_g._014_VCS__vcs_mirror_runas), $(cfsketch_g._014_VCS__vcs_mirror_umask));
    _015_VCS__vcs_mirror_activated::
      "015 VCS::vcs_mirror 5" usebundle => cfdc_vcs:mirror($(cfsketch_g._015_VCS__vcs_mirror_prefix), $(cfsketch_g._015_VCS__vcs_mirror_class_prefix), $(cfsketch_g._015_VCS__vcs_mirror_vcs), $(cfsketch_g._015_VCS__vcs_mirror_path), $(cfsketch_g._015_VCS__vcs_mirror_origin), $(cfsketch_g._015_VCS__vcs_mirror_branch), $(cfsketch_g._015_VCS__vcs_mirror_runas), $(cfsketch_g._015_VCS__vcs_mirror_umask));
    _001_Packages__Generic__add_activated::
      "001 Packages::Generic::add 1" usebundle => cfdc_add_package:entry($(cfsketch_g._001_Packages__Generic__add_prefix), $(cfsketch_g._001_Packages__Generic__add_class_prefix), @(cfsketch_g._001_Packages__Generic__add_packages));
    _012_VCS__vcs_mirror_activated::
      "012 VCS::vcs_mirror 2" usebundle => cfdc_vcs:mirror($(cfsketch_g._012_VCS__vcs_mirror_prefix), $(cfsketch_g._012_VCS__vcs_mirror_class_prefix), $(cfsketch_g._012_VCS__vcs_mirror_vcs), $(cfsketch_g._012_VCS__vcs_mirror_path), $(cfsketch_g._012_VCS__vcs_mirror_origin), $(cfsketch_g._012_VCS__vcs_mirror_branch), $(cfsketch_g._012_VCS__vcs_mirror_runas), $(cfsketch_g._012_VCS__vcs_mirror_umask));

}
